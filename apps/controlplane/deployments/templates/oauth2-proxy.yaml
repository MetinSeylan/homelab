apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: oauth2-proxy
  namespace: argo-cd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    server: https://kubernetes.default.svc
    namespace: keycloak
  project: default
  source:
    chart: oauth2-proxy
    helm:
      values: |
        configuration:
          content: |
            http_address="0.0.0.0:4180"
            cookie_secret="OQINaROshtE9TcZkNAm-5Zs2Pv3xaWytBmc5W7sPX7w="
            email_domains=["example.com"]
            cookie_secure="false"
            upstreams="http://httpbin"
            cookie_domains=[".localtest.me"] # Required so cookie can be read on all subdomains.
            whitelist_domains=[".localtest.me"] # Required to allow redirection back to original requested target.

            # keycloak provider
            client_secret="72341b6d-7065-4518-a0e4-50ee15025608"
            client_id="oauth2-proxy"
            redirect_url="http://oauth2-proxy.localtest.me:4180/oauth2/callback"

            # in this case oauth2-proxy is going to visit
            # http://keycloak.localtest.me:9080/auth/realms/master/.well-known/openid-configuration for configuration
            oidc_issuer_url="http://keycloak.localtest.me:9080/auth/realms/master"
            provider="oidc"
            provider_display_name="Keycloak"

nodeSelector:
          worker: "true"
        redis:
          enabled: false
        ingress:
          enabled: true
          certManager: false
          annotations:
            kubernetes.io/ingress.class: nginx
          hostname: auth.metin.sh
          tls: true
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: "3.7.4"
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true