apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argo-cd
  namespace: argo-cd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    server: https://kubernetes.default.svc
    namespace: argo-cd
  project: default
  source:
    path: apps/controlplane/charts/argo-cd
    repoURL: https://github.com/MetinSeylan/homelab.git
    targetRevision: HEAD
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
        - CreateNamespace=true

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd-oauth-proxy
  namespace: argo-cd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    server: https://kubernetes.default.svc
    namespace: argo-cd
  project: default
  source:
    chart: oauth2-proxy
    helm:
      values: |
        configuration:
          clientID: "prometheus"
          clientSecret: "17QbZ2RfjtD7fSUzvfFjX4rnyDOynBEa"
          content: |
            email_domains=["*"]
            client_secret="17QbZ2RfjtD7fSUzvfFjX4rnyDOynBEa"
            client_id="argocd"
            redirect_url="https://argocd.metin.sh/oauth2/callback"
            oidc_issuer_url="https://sso.metin.sh/realms/master"
            provider="oidc"
            provider_display_name="ArgoCD"

        nodeSelector:
          worker: "true"
        redis:
          enabled: false
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: "3.7.4"
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-ingress
  namespace: argo-cd
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/auth-url: "http://argocd-oauth-proxy-oauth2-proxy.monitoring.svc.cluster.local/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://argocd.metin.sh/oauth2/start?rd=$escaped_request_uri"
spec:
  rules:
    - host: argocd.metin.sh
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: argo-cd-argocd-server
                port:
                  number: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-oauth2-ingress
  namespace: argo-cd
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
    - host: argocd.metin.sh
      http:
        paths:
          - pathType: Prefix
            path: "/oauth2"
            backend:
              service:
                name: argocd-oauth-proxy-oauth2-proxy
                port:
                  number: 80