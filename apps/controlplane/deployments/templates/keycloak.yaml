apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: keycloak
  namespace: argo-cd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    server: https://kubernetes.default.svc
    namespace: keycloak
  project: default
  source:
    chart: keycloak
    helm:
      values: |
        extraEnvVars: |
          - name: KC_HOSTNAME_ADMIN_URL
            value: "https://sso.metin.sh"
          - name: KC_HOSTNAME_URL
            value: "https://sso.metin.sh"
        production: true
        proxy: edge
        postgresql:
          enabled: true
          auth:
            postgresPassword: "keycloak"
            username: "keycloak"
            password: "keycloak"
            database: "keycloak"
          storageClass: local-storage
          primary:
            persistence:
              enabled: true
              existingClaim: keycloak-pv-claim
              storageClass: local-storage
            nodeSelector:
              role: master
        nodeSelector:
          role: master
        ingress:
          enabled: true
          certManager: false
          annotations:
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/affinity: "cookie"
            nginx.ingress.kubernetes.io/session-cookie-name: "route"
            nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
            nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
            nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
            nginx.ingress.kubernetes.io/proxy-body-size: "2000m"
            nginx.ingress.kubernetes.io/proxy-buffer-size: "32k"
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
          hostname: sso.metin.sh
          tls: true
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: 15.1.6
  syncPolicy:
    syncOptions:
      - ServerSideApply=true
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: keycloak-pv
  namespace: keycloak
spec:
  capacity:
    storage: 8Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /storage/nvme/keycloak_postgres
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - master
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keycloak-pv-claim
  namespace: keycloak
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
  storageClassName: local-storage
  volumeMode: Filesystem
  volumeName: keycloak-pv

---
kind: Service
apiVersion: v1
metadata:
  name: keycloak
  namespace: ingress-nginx
spec:
  type: ExternalName
  externalName: keycloak.keycloak.svc.cluster.local
  ports:
    - port: 80