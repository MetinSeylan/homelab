apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: redpanda
  namespace: argo-cd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    server: https://kubernetes.default.svc
    namespace: redpanda
  project: default
  source:
    chart: redpanda
    helm:
      values: |
        console:
          enabled: true
        tls:
          enabled: false
        external:
          enabled: false
        monitoring:
          enabled: true
        statefulset:
          replicas: 1
          nodeSelector:
            role: node2
        storage:
            persistentVolume:
              enabled: true
              size: 32Gi
              storageClass: local-storage
              accessModes:
                - ReadWriteOnce
    repoURL: https://charts.redpanda.com
    targetRevision: "*"
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redpanda-pv
  namespace: redpanda
spec:
  capacity:
    storage: 32Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /storage/nvme/redpanda
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - node2
---

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: redpanda-oauth-proxy
  namespace: argo-cd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    server: https://kubernetes.default.svc
    namespace: redpanda
  project: default
  source:
    chart: oauth2-proxy
    helm:
      values: |
        configuration:
          clientID: "redpanda"
          clientSecret: "17QbZ2RfjtD7fSUzvfFjX4rnyDOynBEa"
          content: |
            email_domains=["*"]
            client_secret="17QbZ2RfjtD7fSUzvfFjX4rnyDOynBEa"
            client_id="redpanda"
            redirect_url="https://redpanda.metin.sh/oauth2/callback"
            oidc_issuer_url="https://sso.metin.sh/realms/master"
            provider="oidc"
            provider_display_name="redpanda"

        nodeSelector:
          role: node2
        redis:
          enabled: false
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: "3.7.4"
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: redpanda-ingress
  namespace: redpanda
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/auth-url: "http://redpanda-oauth-proxy-oauth2-proxy.redpanda.svc.cluster.local/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://redpanda.metin.sh/oauth2/start?rd=$escaped_request_uri"
spec:
  rules:
    - host: redpanda.metin.sh
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: redpanda-console
                port:
                  number: 8080

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: redpanda-oauth2-ingress
  namespace: redpanda
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
    - host: redpanda.metin.sh
      http:
        paths:
          - pathType: Prefix
            path: "/oauth2"
            backend:
              service:
                name: redpanda-oauth-proxy-oauth2-proxy
                port:
                  number: 80